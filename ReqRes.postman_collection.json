{
	"info": {
		"_postman_id": "60a2b653-c51f-483a-b9e0-015a2d1ca455",
		"name": "ReqRes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6563878"
	},
	"item": [
		{
			"name": "User Update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.collectionVariables.set(\"USERID\", _.random(1,12));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"job\": \"{{$randomJobType}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{REQRES}}/api/users/2",
					"host": [
						"{{REQRES}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "User ByID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.collectionVariables.set(\"USERID\", _.random(1,12));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var res = pm.response\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    res.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(res.text()).to.include(\"Lindsay\");\r",
							"});\r",
							"\r",
							"// Validate specific value using JSON path\r",
							"pm.test(\"Equals to\", function () {\r",
							"    var jsonData = res.json();\r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Lindsay\");\r",
							"});\r",
							"\r",
							"// Validate contains string using JSON path\r",
							"pm.test(\"Contains text\", function () {\r",
							"    var jsonData = res.json();\r",
							"    pm.expect(jsonData.data.email).to.contain(\"@!\");  // .not.to.contain(\"##\")\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"data\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"email\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"first_name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"last_name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"avatar\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"email\",\r",
							"        \"first_name\",\r",
							"        \"last_name\",\r",
							"        \"avatar\"\r",
							"      ]\r",
							"    },\r",
							"    \"support\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"text\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"url\",\r",
							"        \"text\"\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"data\",\r",
							"    \"support\"\r",
							"  ]\r",
							"};\r",
							"\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(res.json(), schema)).to.be.true;\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{REQRES}}/api/users/8",
					"host": [
						"{{REQRES}}"
					],
					"path": [
						"api",
						"users",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "User ByID Head",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.collectionVariables.set(\"USERID\", _.random(1,12));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var res = pm.response\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    res.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "HEAD",
				"header": [],
				"url": {
					"raw": "{{REQRES}}/api/users/8",
					"host": [
						"{{REQRES}}"
					],
					"path": [
						"api",
						"users",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Delete ByID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.collectionVariables.set(\"USERID\", _.random(1,12));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{REQRES}}/api/users/:ID",
					"host": [
						"{{REQRES}}"
					],
					"path": [
						"api",
						"users",
						":ID"
					],
					"variable": [
						{
							"key": "ID",
							"value": "{{USERID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"pm.collectionVariables.set(\"USERID\", _.random(1,12));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{REQRES}}/api/register",
					"host": [
						"{{REQRES}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "REQRES",
			"value": "https://reqres.in",
			"type": "default"
		},
		{
			"key": "USERID",
			"value": ""
		}
	]
}